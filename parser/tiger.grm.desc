27 reduce/reduce conflicts
47 shift/reduce conflicts
1 rule not reduced

warning: rule <exp_can_be_empty : SEMICOLON exp exp_can_be_empty > will never be reduced
error:  state 32: shift/reduce conflict (shift FUNCTION, reduce by rule 5)
error:  state 35: shift/reduce conflict (shift TYPE, reduce by rule 4)
error:  state 45: shift/reduce conflict (shift SEMICOLON, reduce by rule 40)
error:  state 52: shift/reduce conflict (shift SEMICOLON, reduce by rule 50)
error:  state 54: shift/reduce conflict (shift SEMICOLON, reduce by rule 58)
error:  state 55: shift/reduce conflict (shift SEMICOLON, reduce by rule 57)
error:  state 56: shift/reduce conflict (shift SEMICOLON, reduce by rule 62)
error:  state 57: shift/reduce conflict (shift SEMICOLON, reduce by rule 64)
error:  state 58: shift/reduce conflict (shift SEMICOLON, reduce by rule 61)
error:  state 59: shift/reduce conflict (shift SEMICOLON, reduce by rule 63)
error:  state 60: shift/reduce conflict (shift SEMICOLON, reduce by rule 60)
error:  state 61: shift/reduce conflict (shift SEMICOLON, reduce by rule 59)
error:  state 62: shift/reduce conflict (shift SEMICOLON, reduce by rule 43)
error:  state 63: shift/reduce conflict (shift SEMICOLON, reduce by rule 44)
error:  state 64: shift/reduce conflict (shift SEMICOLON, reduce by rule 42)
error:  state 65: shift/reduce conflict (shift SEMICOLON, reduce by rule 41)
error:  state 66: shift/reduce conflict (shift OR, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift AND, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift GE, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift GT, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift LE, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift LT, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift NEQ, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift EQ, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift DIVIDE, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift TIMES, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift MINUS, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift PLUS, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift SEMICOLON, reduce by rule 68)
error:  state 92: shift/reduce conflict (shift SEMICOLON, reduce by rule 53)
error:  state 93: shift/reduce conflict (shift SEMICOLON, reduce by rule 52)
error:  state 101: shift/reduce conflict (shift OR, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift AND, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift GE, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift GT, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift LE, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift LT, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift NEQ, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift EQ, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift DIVIDE, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift TIMES, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift MINUS, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift PLUS, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift SEMICOLON, reduce by rule 68)
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on TYPE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on VAR
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on FUNCTION
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on END
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on IN
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on DO
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on TO
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on ELSE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on THEN
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on OR
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on AND
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on GE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on GT
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on LE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on LT
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on NEQ
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on EQ
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on DIVIDE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on TIMES
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on MINUS
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on PLUS
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on RBRACE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on RBRACK
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on RPAREN
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on SEMICOLON
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on COMMA
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on EOF
error:  state 128: shift/reduce conflict (shift SEMICOLON, reduce by rule 51)
error:  state 130: shift/reduce conflict (shift SEMICOLON, reduce by rule 49)
error:  state 143: shift/reduce conflict (shift SEMICOLON, reduce by rule 54)

state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 146
	exp	goto 3
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 1:

	exp : lval_not_id .  (reduce by rule 36)
	lval : lval_not_id .  (reduce by rule 24)
	lval_not_id : lval_not_id . LBRACK exp RBRACK 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	LBRACK	shift 15
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	DOT	reduce by rule 24
	PLUS	reduce by rule 36
	MINUS	reduce by rule 36
	TIMES	reduce by rule 36
	DIVIDE	reduce by rule 36
	EQ	reduce by rule 36
	NEQ	reduce by rule 36
	LT	reduce by rule 36
	LE	reduce by rule 36
	GT	reduce by rule 36
	GE	reduce by rule 36
	AND	reduce by rule 36
	OR	reduce by rule 36
	ASSIGN	reduce by rule 24
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 2:

	exp : lval . ASSIGN exp 
	lval_not_id : lval . DOT ID 

	DOT	shift 17
	ASSIGN	shift 16


	.	error


state 3:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 37)



	.	reduce by rule 37


state 5:

	exp : BREAK .  (reduce by rule 55)



	.	reduce by rule 55


state 6:

	exp : LET . decs IN exp END 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 38
	dec	goto 37
	tydec	goto 36
	tydecs	goto 35
	vardec	goto 34
	fundec	goto 33
	fundecs	goto 32

	.	reduce by rule 1


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 42


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 43
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 45
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 11:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	shift 47
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 12:

	exp : STRING .  (reduce by rule 39)



	.	reduce by rule 39


state 13:

	exp : INT .  (reduce by rule 38)



	.	reduce by rule 38


state 14:

	exp : ID .  (reduce by rule 35)
	exp : ID . LPAREN arguments RPAREN 
	exp : ID . LBRACE record_field record_tail RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lval : ID .  (reduce by rule 23)
	lval_not_id : ID . LBRACK exp RBRACK 

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	LPAREN	shift 50
	RPAREN	reduce by rule 35
	LBRACK	shift 49
	RBRACK	reduce by rule 35
	LBRACE	shift 48
	RBRACE	reduce by rule 35
	DOT	reduce by rule 23
	PLUS	reduce by rule 35
	MINUS	reduce by rule 35
	TIMES	reduce by rule 35
	DIVIDE	reduce by rule 35
	EQ	reduce by rule 35
	NEQ	reduce by rule 35
	LT	reduce by rule 35
	LE	reduce by rule 35
	GT	reduce by rule 35
	GE	reduce by rule 35
	AND	reduce by rule 35
	OR	reduce by rule 35
	ASSIGN	reduce by rule 23
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 15:

	lval_not_id : lval_not_id LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 51
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 16:

	exp : lval ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 17:

	lval_not_id : lval DOT . ID 

	ID	shift 53


	.	error


state 18:

	exp : exp exp_tail .  (reduce by rule 65)



	.	reduce by rule 65


state 19:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 20:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 21:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 22:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 23:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 24:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 25:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 26:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 27:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 28:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 29:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 64
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 30:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 65
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 31:

	exp_tail : SEMICOLON . exp exp_can_be_empty 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 66
	lval	goto 2
	lval_not_id	goto 1

	.	error

error:  state 32: shift/reduce conflict (shift FUNCTION, reduce by rule 5)

state 32:

	dec : fundecs .  (reduce by rule 5)
	fundecs : fundecs . fundec 

	FUNCTION	shift 41

	fundec	goto 67

	.	reduce by rule 5


state 33:

	fundecs : fundec .  (reduce by rule 21)



	.	reduce by rule 21


state 34:

	dec : vardec .  (reduce by rule 3)



	.	reduce by rule 3

error:  state 35: shift/reduce conflict (shift TYPE, reduce by rule 4)

state 35:

	dec : tydecs .  (reduce by rule 4)
	tydecs : tydecs . tydec 

	TYPE	shift 39

	tydec	goto 68

	.	reduce by rule 4


state 36:

	tydecs : tydec .  (reduce by rule 6)



	.	reduce by rule 6


state 37:

	decs : dec . decs 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 69
	dec	goto 37
	tydec	goto 36
	tydecs	goto 35
	vardec	goto 34
	fundec	goto 33
	fundecs	goto 32

	.	reduce by rule 1


state 38:

	exp : LET decs . IN exp END 

	IN	shift 70


	.	error


state 39:

	tydec : TYPE . ID EQ ty 

	ID	shift 71


	.	error


state 40:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 72


	.	error


state 41:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 73


	.	error


state 42:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 43:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : WHILE exp . DO exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 75

	exp_tail	goto 18

	.	error


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	THEN	shift 76

	exp_tail	goto 18

	.	error

error:  state 45: shift/reduce conflict (shift SEMICOLON, reduce by rule 40)

state 45:

	exp : MINUS exp .  (reduce by rule 40)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31

	exp_tail	goto 18

	.	reduce by rule 40


state 46:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : LPAREN exp . RPAREN 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	RPAREN	shift 77
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	error


state 47:

	exp : LPAREN RPAREN .  (reduce by rule 47)



	.	reduce by rule 47


state 48:

	exp : ID LBRACE . record_field record_tail RBRACE 

	ID	shift 79

	record_field	goto 78

	.	error


state 49:

	exp : ID LBRACK . exp RBRACK OF exp 
	lval_not_id : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 80
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 50:

	exp : ID LPAREN . arguments RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 82
	lval	goto 2
	lval_not_id	goto 1
	arguments	goto 81

	.	reduce by rule 28


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	lval_not_id : lval_not_id LBRACK exp . RBRACK 

	SEMICOLON	shift 31
	RBRACK	shift 83
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	error

error:  state 52: shift/reduce conflict (shift SEMICOLON, reduce by rule 50)

state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : lval ASSIGN exp .  (reduce by rule 50)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 50


state 53:

	lval_not_id : lval DOT ID .  (reduce by rule 25)



	.	reduce by rule 25

error:  state 54: shift/reduce conflict (shift SEMICOLON, reduce by rule 58)

state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 58)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21

	exp_tail	goto 18

	.	reduce by rule 58

error:  state 55: shift/reduce conflict (shift SEMICOLON, reduce by rule 57)

state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 57)
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21

	exp_tail	goto 18

	.	reduce by rule 57

error:  state 56: shift/reduce conflict (shift SEMICOLON, reduce by rule 62)

state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 62)
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	shift 31
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 62
	OR	reduce by rule 62
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62

	exp_tail	goto 18

	.	error

error:  state 57: shift/reduce conflict (shift SEMICOLON, reduce by rule 64)

state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 64)
	exp : exp . exp_tail 

	EOF	reduce by rule 64
	COMMA	reduce by rule 64
	SEMICOLON	shift 31
	RPAREN	reduce by rule 64
	RBRACK	reduce by rule 64
	RBRACE	reduce by rule 64
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 64
	OR	reduce by rule 64
	THEN	reduce by rule 64
	ELSE	reduce by rule 64
	TO	reduce by rule 64
	DO	reduce by rule 64
	IN	reduce by rule 64
	END	reduce by rule 64
	FUNCTION	reduce by rule 64
	VAR	reduce by rule 64
	TYPE	reduce by rule 64

	exp_tail	goto 18

	.	error

error:  state 58: shift/reduce conflict (shift SEMICOLON, reduce by rule 61)

state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 61)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	shift 31
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61

	exp_tail	goto 18

	.	error

error:  state 59: shift/reduce conflict (shift SEMICOLON, reduce by rule 63)

state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 63)
	exp : exp . GT exp 
	exp : exp . exp_tail 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	shift 31
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63

	exp_tail	goto 18

	.	error

error:  state 60: shift/reduce conflict (shift SEMICOLON, reduce by rule 60)

state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 60)
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	shift 31
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60

	exp_tail	goto 18

	.	error

error:  state 61: shift/reduce conflict (shift SEMICOLON, reduce by rule 59)

state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 59)
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	shift 31
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59

	exp_tail	goto 18

	.	error

error:  state 62: shift/reduce conflict (shift SEMICOLON, reduce by rule 43)

state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 43)
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31

	exp_tail	goto 18

	.	reduce by rule 43

error:  state 63: shift/reduce conflict (shift SEMICOLON, reduce by rule 44)

state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 44)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31

	exp_tail	goto 18

	.	reduce by rule 44

error:  state 64: shift/reduce conflict (shift SEMICOLON, reduce by rule 42)

state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 42)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	TIMES	shift 28
	DIVIDE	shift 27

	exp_tail	goto 18

	.	reduce by rule 42

error:  state 65: shift/reduce conflict (shift SEMICOLON, reduce by rule 41)

state 65:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 41)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	TIMES	shift 28
	DIVIDE	shift 27

	exp_tail	goto 18

	.	reduce by rule 41

error:  state 66: shift/reduce conflict (shift OR, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift AND, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift GE, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift GT, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift LE, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift LT, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift NEQ, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift EQ, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift DIVIDE, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift TIMES, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift MINUS, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift PLUS, reduce by rule 68)
error:  state 66: shift/reduce conflict (shift SEMICOLON, reduce by rule 68)

state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	exp_tail : SEMICOLON exp . exp_can_be_empty 

	SEMICOLON	shift 85
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18
	exp_can_be_empty	goto 84

	.	reduce by rule 68


state 67:

	fundecs : fundecs fundec .  (reduce by rule 22)



	.	reduce by rule 22


state 68:

	tydecs : tydecs tydec .  (reduce by rule 7)



	.	reduce by rule 7


state 69:

	decs : dec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 70:

	exp : LET decs IN . exp END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 86
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 71:

	tydec : TYPE ID . EQ ty 

	EQ	shift 87


	.	error


state 72:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 89
	ASSIGN	shift 88


	.	error


state 73:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 90


	.	error


state 74:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 91
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 75:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 92
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 76:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 93
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 77:

	exp : LPAREN exp RPAREN .  (reduce by rule 46)



	.	reduce by rule 46


state 78:

	exp : ID LBRACE record_field . record_tail RBRACE 

	COMMA	shift 95

	record_tail	goto 94

	.	reduce by rule 33


state 79:

	record_field : ID . EQ exp 

	EQ	shift 96


	.	error


state 80:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	lval_not_id : ID LBRACK exp . RBRACK 

	SEMICOLON	shift 31
	RBRACK	shift 97
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	error


state 81:

	exp : ID LPAREN arguments . RPAREN 

	RPAREN	shift 98


	.	error


state 82:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	arguments : exp . arguments_tail 

	COMMA	shift 100
	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18
	arguments_tail	goto 99

	.	reduce by rule 30


state 83:

	lval_not_id : lval_not_id LBRACK exp RBRACK .  (reduce by rule 27)



	.	reduce by rule 27


state 84:

	exp_tail : SEMICOLON exp exp_can_be_empty .  (reduce by rule 66)



	.	reduce by rule 66


state 85:

	exp_tail : SEMICOLON . exp exp_can_be_empty 
	exp_can_be_empty : SEMICOLON . exp exp_can_be_empty 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 101
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 86:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : LET decs IN exp . END 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	END	shift 102

	exp_tail	goto 18

	.	error


state 87:

	tydec : TYPE ID EQ . ty 

	ID	shift 106
	LBRACE	shift 105
	ARRAY	shift 104

	ty	goto 103

	.	error


state 88:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 107
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 89:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 108


	.	error


state 90:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 111

	tyfield	goto 110
	tyfields	goto 109

	.	reduce by rule 13


state 91:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	TO	shift 112

	exp_tail	goto 18

	.	error

error:  state 92: shift/reduce conflict (shift SEMICOLON, reduce by rule 53)

state 92:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : WHILE exp DO exp .  (reduce by rule 53)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 53

error:  state 93: shift/reduce conflict (shift SEMICOLON, reduce by rule 52)

state 93:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 52)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	ELSE	shift 113

	exp_tail	goto 18

	.	reduce by rule 52


state 94:

	exp : ID LBRACE record_field record_tail . RBRACE 

	RBRACE	shift 114


	.	error


state 95:

	record_tail : COMMA . record_field record_tail 

	ID	shift 79

	record_field	goto 115

	.	error


state 96:

	record_field : ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 116
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 97:

	exp : ID LBRACK exp RBRACK . OF exp 
	lval_not_id : ID LBRACK exp RBRACK .  (reduce by rule 26)

	OF	shift 117


	.	reduce by rule 26


state 98:

	exp : ID LPAREN arguments RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 99:

	arguments : exp arguments_tail .  (reduce by rule 29)



	.	reduce by rule 29


state 100:

	arguments_tail : COMMA . exp arguments_tail 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 118
	lval	goto 2
	lval_not_id	goto 1

	.	error

error:  state 101: shift/reduce conflict (shift OR, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift AND, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift GE, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift GT, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift LE, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift LT, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift NEQ, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift EQ, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift DIVIDE, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift TIMES, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift MINUS, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift PLUS, reduce by rule 68)
error:  state 101: shift/reduce conflict (shift SEMICOLON, reduce by rule 68)

state 101:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	exp_tail : SEMICOLON exp . exp_can_be_empty 
	exp_can_be_empty : SEMICOLON exp . exp_can_be_empty 

	SEMICOLON	shift 85
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18
	exp_can_be_empty	goto 119

	.	reduce by rule 68


state 102:

	exp : LET decs IN exp END .  (reduce by rule 56)



	.	reduce by rule 56


state 103:

	tydec : TYPE ID EQ ty .  (reduce by rule 8)



	.	reduce by rule 8


state 104:

	ty : ARRAY . OF ID 

	OF	shift 120


	.	error


state 105:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 111

	tyfield	goto 110
	tyfields	goto 121

	.	reduce by rule 13


state 106:

	ty : ID .  (reduce by rule 9)



	.	reduce by rule 9


state 107:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 17)

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 17


state 108:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 122


	.	error


state 109:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 123


	.	error


state 110:

	tyfields : tyfield . tyfields_tail 

	COMMA	shift 125

	tyfields_tail	goto 124

	.	reduce by rule 15


state 111:

	tyfield : ID . COLON ID 

	COLON	shift 126


	.	error


state 112:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 127
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 113:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 128
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 114:

	exp : ID LBRACE record_field record_tail RBRACE .  (reduce by rule 48)



	.	reduce by rule 48


state 115:

	record_tail : COMMA record_field . record_tail 

	COMMA	shift 95

	record_tail	goto 129

	.	reduce by rule 33


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	record_field : ID EQ exp .  (reduce by rule 32)

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 32


state 117:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 130
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 118:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	arguments_tail : COMMA exp . arguments_tail 

	COMMA	shift 100
	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18
	arguments_tail	goto 131

	.	reduce by rule 30

error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on TYPE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on VAR
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on FUNCTION
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on END
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on IN
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on DO
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on TO
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on ELSE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on THEN
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on OR
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on AND
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on GE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on GT
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on LE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on LT
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on NEQ
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on EQ
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on DIVIDE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on TIMES
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on MINUS
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on PLUS
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on RBRACE
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on RBRACK
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on RPAREN
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on SEMICOLON
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on COMMA
error:  state 119: reduce/reduce conflict between rule 67 and rule 66 on EOF

state 119:

	exp_tail : SEMICOLON exp exp_can_be_empty .  (reduce by rule 66)
	exp_can_be_empty : SEMICOLON exp exp_can_be_empty .  (reduce by rule 67)

	EOF	reduce by rule 66
	COMMA	reduce by rule 66
	SEMICOLON	reduce by rule 66
	RPAREN	reduce by rule 66
	RBRACK	reduce by rule 66
	RBRACE	reduce by rule 66
	PLUS	reduce by rule 66
	MINUS	reduce by rule 66
	TIMES	reduce by rule 66
	DIVIDE	reduce by rule 66
	EQ	reduce by rule 66
	NEQ	reduce by rule 66
	LT	reduce by rule 66
	LE	reduce by rule 66
	GT	reduce by rule 66
	GE	reduce by rule 66
	AND	reduce by rule 66
	OR	reduce by rule 66
	THEN	reduce by rule 66
	ELSE	reduce by rule 66
	TO	reduce by rule 66
	DO	reduce by rule 66
	IN	reduce by rule 66
	END	reduce by rule 66
	FUNCTION	reduce by rule 66
	VAR	reduce by rule 66
	TYPE	reduce by rule 66


	.	error


state 120:

	ty : ARRAY OF . ID 

	ID	shift 132


	.	error


state 121:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 133


	.	error


state 122:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 134
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 123:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 136
	EQ	shift 135


	.	error


state 124:

	tyfields : tyfield tyfields_tail .  (reduce by rule 14)



	.	reduce by rule 14


state 125:

	tyfields_tail : COMMA . tyfield tyfields_tail 

	ID	shift 111

	tyfield	goto 137

	.	error


state 126:

	tyfield : ID COLON . ID 

	ID	shift 138


	.	error


state 127:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 139

	exp_tail	goto 18

	.	error

error:  state 128: shift/reduce conflict (shift SEMICOLON, reduce by rule 51)

state 128:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 51)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 51


state 129:

	record_tail : COMMA record_field record_tail .  (reduce by rule 34)



	.	reduce by rule 34

error:  state 130: shift/reduce conflict (shift SEMICOLON, reduce by rule 49)

state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 49)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 49


state 131:

	arguments_tail : COMMA exp arguments_tail .  (reduce by rule 31)



	.	reduce by rule 31


state 132:

	ty : ARRAY OF ID .  (reduce by rule 11)



	.	reduce by rule 11


state 133:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 18)

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 18


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 140
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 141


	.	error


state 137:

	tyfields_tail : COMMA tyfield . tyfields_tail 

	COMMA	shift 125

	tyfields_tail	goto 142

	.	reduce by rule 15


state 138:

	tyfield : ID COLON ID .  (reduce by rule 12)



	.	reduce by rule 12


state 139:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 143
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 140:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 19)

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 19


state 141:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 144


	.	error


state 142:

	tyfields_tail : COMMA tyfield tyfields_tail .  (reduce by rule 16)



	.	reduce by rule 16

error:  state 143: shift/reduce conflict (shift SEMICOLON, reduce by rule 54)

state 143:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 54)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 54


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 145
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 145:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp . exp_tail 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 20)

	SEMICOLON	shift 31
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19

	exp_tail	goto 18

	.	reduce by rule 20


state 146:


	EOF	accept


	.	error

619 of 1174 action table entries left after compaction
182 goto table entries
