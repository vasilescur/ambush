2 shift/reduce conflicts

error:  state 30: shift/reduce conflict (shift FUNCTION, reduce by rule 5)
error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 4)

state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 147
	exp	goto 3
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 1:

	exp : lval_not_id .  (reduce by rule 36)
	lval : lval_not_id .  (reduce by rule 24)
	lval_not_id : lval_not_id . LBRACK exp RBRACK 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	LBRACK	shift 15
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	DOT	reduce by rule 24
	PLUS	reduce by rule 36
	MINUS	reduce by rule 36
	TIMES	reduce by rule 36
	DIVIDE	reduce by rule 36
	EQ	reduce by rule 36
	NEQ	reduce by rule 36
	LT	reduce by rule 36
	LE	reduce by rule 36
	GT	reduce by rule 36
	GE	reduce by rule 36
	AND	reduce by rule 36
	OR	reduce by rule 36
	ASSIGN	reduce by rule 24
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 2:

	exp : lval . ASSIGN exp 
	lval_not_id : lval . DOT ID 

	DOT	shift 17
	ASSIGN	shift 16


	.	error


state 3:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 37)



	.	reduce by rule 37


state 5:

	exp : BREAK .  (reduce by rule 55)



	.	reduce by rule 55


state 6:

	exp : LET . decs IN exp END 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 36
	dec	goto 35
	tydec	goto 34
	tydecs	goto 33
	vardec	goto 32
	fundec	goto 31
	fundecs	goto 30

	.	reduce by rule 1


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 40


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 43
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 11:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp exp_tail RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	shift 45
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 12:

	exp : STRING .  (reduce by rule 39)



	.	reduce by rule 39


state 13:

	exp : INT .  (reduce by rule 38)



	.	reduce by rule 38


state 14:

	exp : ID .  (reduce by rule 35)
	exp : ID . LPAREN arguments RPAREN 
	exp : ID . LBRACE record_field record_tail RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lval : ID .  (reduce by rule 23)
	lval_not_id : ID . LBRACK exp RBRACK 

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	LPAREN	shift 48
	RPAREN	reduce by rule 35
	LBRACK	shift 47
	RBRACK	reduce by rule 35
	LBRACE	shift 46
	RBRACE	reduce by rule 35
	DOT	reduce by rule 23
	PLUS	reduce by rule 35
	MINUS	reduce by rule 35
	TIMES	reduce by rule 35
	DIVIDE	reduce by rule 35
	EQ	reduce by rule 35
	NEQ	reduce by rule 35
	LT	reduce by rule 35
	LE	reduce by rule 35
	GT	reduce by rule 35
	GE	reduce by rule 35
	AND	reduce by rule 35
	OR	reduce by rule 35
	ASSIGN	reduce by rule 23
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 15:

	lval_not_id : lval_not_id LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 49
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 16:

	exp : lval ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 17:

	lval_not_id : lval DOT . ID 

	ID	shift 51


	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	lval	goto 2
	lval_not_id	goto 1

	.	error

error:  state 30: shift/reduce conflict (shift FUNCTION, reduce by rule 5)

state 30:

	dec : fundecs .  (reduce by rule 5)
	fundecs : fundecs . fundec 

	FUNCTION	shift 39

	fundec	goto 64

	.	reduce by rule 5


state 31:

	fundecs : fundec .  (reduce by rule 21)



	.	reduce by rule 21


state 32:

	dec : vardec .  (reduce by rule 3)



	.	reduce by rule 3

error:  state 33: shift/reduce conflict (shift TYPE, reduce by rule 4)

state 33:

	dec : tydecs .  (reduce by rule 4)
	tydecs : tydecs . tydec 

	TYPE	shift 37

	tydec	goto 65

	.	reduce by rule 4


state 34:

	tydecs : tydec .  (reduce by rule 6)



	.	reduce by rule 6


state 35:

	decs : dec . decs 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 66
	dec	goto 35
	tydec	goto 34
	tydecs	goto 33
	vardec	goto 32
	fundec	goto 31
	fundecs	goto 30

	.	reduce by rule 1


state 36:

	exp : LET decs . IN exp END 

	IN	shift 67


	.	error


state 37:

	tydec : TYPE . ID EQ ty 

	ID	shift 68


	.	error


state 38:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 69


	.	error


state 39:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 70


	.	error


state 40:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 71


	.	error


state 41:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : WHILE exp . DO exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 72


	.	error


state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 73


	.	error


state 43:

	exp : MINUS exp .  (reduce by rule 40)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 



	.	reduce by rule 40


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : LPAREN exp . RPAREN 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : LPAREN exp . exp_tail RPAREN 

	SEMICOLON	shift 76
	RPAREN	shift 75
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	exp_tail	goto 74

	.	error


state 45:

	exp : LPAREN RPAREN .  (reduce by rule 47)



	.	reduce by rule 47


state 46:

	exp : ID LBRACE . record_field record_tail RBRACE 

	ID	shift 78

	record_field	goto 77

	.	error


state 47:

	exp : ID LBRACK . exp RBRACK OF exp 
	lval_not_id : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 79
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 48:

	exp : ID LPAREN . arguments RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 81
	lval	goto 2
	lval_not_id	goto 1
	arguments	goto 80

	.	reduce by rule 28


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	lval_not_id : lval_not_id LBRACK exp . RBRACK 

	RBRACK	shift 82
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : lval ASSIGN exp .  (reduce by rule 50)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 50


state 51:

	lval_not_id : lval DOT ID .  (reduce by rule 25)



	.	reduce by rule 25


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 58)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 58


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 57)
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 57


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 62)
	exp : exp . LT exp 
	exp : exp . GT exp 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	reduce by rule 62
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 62
	OR	reduce by rule 62
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 64)

	EOF	reduce by rule 64
	COMMA	reduce by rule 64
	SEMICOLON	reduce by rule 64
	RPAREN	reduce by rule 64
	RBRACK	reduce by rule 64
	RBRACE	reduce by rule 64
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 64
	OR	reduce by rule 64
	THEN	reduce by rule 64
	ELSE	reduce by rule 64
	TO	reduce by rule 64
	DO	reduce by rule 64
	IN	reduce by rule 64
	END	reduce by rule 64
	FUNCTION	reduce by rule 64
	VAR	reduce by rule 64
	TYPE	reduce by rule 64


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 61)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 63)
	exp : exp . GT exp 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 60)
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 59)
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 43)
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 



	.	reduce by rule 43


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 44)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 



	.	reduce by rule 44


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 42)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 42


state 63:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 41)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 41


state 64:

	fundecs : fundecs fundec .  (reduce by rule 22)



	.	reduce by rule 22


state 65:

	tydecs : tydecs tydec .  (reduce by rule 7)



	.	reduce by rule 7


state 66:

	decs : dec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 67:

	exp : LET decs IN . exp END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 83
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 68:

	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 69:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 70:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 87


	.	error


state 71:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 88
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 72:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 89
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 73:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 90
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 74:

	exp : LPAREN exp exp_tail . RPAREN 

	RPAREN	shift 91


	.	error


state 75:

	exp : LPAREN exp RPAREN .  (reduce by rule 46)



	.	reduce by rule 46


state 76:

	exp_tail : SEMICOLON . exp exp_can_be_empty 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 92
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 77:

	exp : ID LBRACE record_field . record_tail RBRACE 

	COMMA	shift 94

	record_tail	goto 93

	.	reduce by rule 33


state 78:

	record_field : ID . EQ exp 

	EQ	shift 95


	.	error


state 79:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	lval_not_id : ID LBRACK exp . RBRACK 

	RBRACK	shift 96
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 80:

	exp : ID LPAREN arguments . RPAREN 

	RPAREN	shift 97


	.	error


state 81:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	arguments : exp . arguments_tail 

	COMMA	shift 99
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	arguments_tail	goto 98

	.	reduce by rule 30


state 82:

	lval_not_id : lval_not_id LBRACK exp RBRACK .  (reduce by rule 27)



	.	reduce by rule 27


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : LET decs IN exp . END 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	END	shift 100


	.	error


state 84:

	tydec : TYPE ID EQ . ty 

	ID	shift 104
	LBRACE	shift 103
	ARRAY	shift 102

	ty	goto 101

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 105
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 106


	.	error


state 87:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 109

	tyfield	goto 108
	tyfields	goto 107

	.	reduce by rule 13


state 88:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 110


	.	error


state 89:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : WHILE exp DO exp .  (reduce by rule 53)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 53


state 90:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 52)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 111


	.	reduce by rule 52


state 91:

	exp : LPAREN exp exp_tail RPAREN .  (reduce by rule 65)



	.	reduce by rule 65


state 92:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp_tail : SEMICOLON exp . exp_can_be_empty 

	SEMICOLON	shift 113
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	exp_can_be_empty	goto 112

	.	reduce by rule 68


state 93:

	exp : ID LBRACE record_field record_tail . RBRACE 

	RBRACE	shift 114


	.	error


state 94:

	record_tail : COMMA . record_field record_tail 

	ID	shift 78

	record_field	goto 115

	.	error


state 95:

	record_field : ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 116
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 96:

	exp : ID LBRACK exp RBRACK . OF exp 
	lval_not_id : ID LBRACK exp RBRACK .  (reduce by rule 26)

	OF	shift 117


	.	reduce by rule 26


state 97:

	exp : ID LPAREN arguments RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 98:

	arguments : exp arguments_tail .  (reduce by rule 29)



	.	reduce by rule 29


state 99:

	arguments_tail : COMMA . exp arguments_tail 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 118
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 100:

	exp : LET decs IN exp END .  (reduce by rule 56)



	.	reduce by rule 56


state 101:

	tydec : TYPE ID EQ ty .  (reduce by rule 8)



	.	reduce by rule 8


state 102:

	ty : ARRAY . OF ID 

	OF	shift 119


	.	error


state 103:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 109

	tyfield	goto 108
	tyfields	goto 120

	.	reduce by rule 13


state 104:

	ty : ID .  (reduce by rule 9)



	.	reduce by rule 9


state 105:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 17)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 17


state 106:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 121


	.	error


state 107:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 122


	.	error


state 108:

	tyfields : tyfield . tyfields_tail 

	COMMA	shift 124

	tyfields_tail	goto 123

	.	reduce by rule 15


state 109:

	tyfield : ID . COLON ID 

	COLON	shift 125


	.	error


state 110:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 126
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 111:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 127
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 112:

	exp_tail : SEMICOLON exp exp_can_be_empty .  (reduce by rule 66)



	.	reduce by rule 66


state 113:

	exp_can_be_empty : SEMICOLON . exp exp_can_be_empty 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 128
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 114:

	exp : ID LBRACE record_field record_tail RBRACE .  (reduce by rule 48)



	.	reduce by rule 48


state 115:

	record_tail : COMMA record_field . record_tail 

	COMMA	shift 94

	record_tail	goto 129

	.	reduce by rule 33


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	record_field : ID EQ exp .  (reduce by rule 32)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 32


state 117:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 130
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 118:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	arguments_tail : COMMA exp . arguments_tail 

	COMMA	shift 99
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	arguments_tail	goto 131

	.	reduce by rule 30


state 119:

	ty : ARRAY OF . ID 

	ID	shift 132


	.	error


state 120:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 133


	.	error


state 121:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 134
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 136
	EQ	shift 135


	.	error


state 123:

	tyfields : tyfield tyfields_tail .  (reduce by rule 14)



	.	reduce by rule 14


state 124:

	tyfields_tail : COMMA . tyfield tyfields_tail 

	ID	shift 109

	tyfield	goto 137

	.	error


state 125:

	tyfield : ID COLON . ID 

	ID	shift 138


	.	error


state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 139


	.	error


state 127:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 51)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 51


state 128:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	exp_can_be_empty : SEMICOLON exp . exp_can_be_empty 

	SEMICOLON	shift 113
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18

	exp_can_be_empty	goto 140

	.	reduce by rule 68


state 129:

	record_tail : COMMA record_field record_tail .  (reduce by rule 34)



	.	reduce by rule 34


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 49)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 49


state 131:

	arguments_tail : COMMA exp arguments_tail .  (reduce by rule 31)



	.	reduce by rule 31


state 132:

	ty : ARRAY OF ID .  (reduce by rule 11)



	.	reduce by rule 11


state 133:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 18)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 18


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 141
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 142


	.	error


state 137:

	tyfields_tail : COMMA tyfield . tyfields_tail 

	COMMA	shift 124

	tyfields_tail	goto 143

	.	reduce by rule 15


state 138:

	tyfield : ID COLON ID .  (reduce by rule 12)



	.	reduce by rule 12


state 139:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 144
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 140:

	exp_can_be_empty : SEMICOLON exp exp_can_be_empty .  (reduce by rule 67)



	.	reduce by rule 67


state 141:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 19)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 19


state 142:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 145


	.	error


state 143:

	tyfields_tail : COMMA tyfield tyfields_tail .  (reduce by rule 16)



	.	reduce by rule 16


state 144:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 54)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 54


state 145:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 146
	lval	goto 2
	lval_not_id	goto 1

	.	error


state 146:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . GT exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 20)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 20


state 147:


	EOF	accept


	.	error

566 of 1121 action table entries left after compaction
146 goto table entries
